{"ast":null,"code":"import axios from 'axios';\nfunction getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\nvar isAdmin = false;\nvar isAuthentication = false;\nvar token = getCookie('token');\nif (token) isAuthentication = true;\naxios.get('http://localhost:8080/api/isAdmin/' + token).then(response => {\n  if (response.status == 200) {\n    if (response.data == false) {\n      isAdmin = true;\n    } else {\n      isAdmin = false;\n    }\n  }\n}).catch(() => {\n  return false;\n});\nimport Vuex from 'vuex';\nvar store = new Vuex.Store({\n  state() {\n    return {\n      statusOverly: false,\n      statusModal: false,\n      statusBackground: true,\n      isAdmin: isAdmin,\n      auth: {\n        isAuthentication: isAuthentication\n      },\n      list_post: [],\n      length_all_blog: 0,\n      category: {\n        status: false,\n        name: \"\"\n      }\n    };\n  },\n  getters: {},\n  mutations: {\n    TOGGLE_AUTH(state) {\n      state.auth.isAuthentication = !state.auth.isAuthentication;\n    },\n    GET_LIST_POST(state, data, category) {\n      state.list_post = data.list_post;\n      state.length_all_blog = data.length;\n      state.category.status = true;\n      // state.category.name = category\n      console.log(category);\n    },\n    GET_LIST_POST_PAGE(state, list_post) {\n      state.list_post = list_post;\n    },\n    GET_AUTH_LOGIN(state, result) {\n      state.auth.isAuthentication = result;\n    },\n    GET_LENGTH_ALL_BLOG(state, length) {\n      state.length_all_blog = length;\n    }\n  },\n  actions: {\n    async getAllPost({\n      commit\n    }) {\n      try {\n        let response = await axios.get('http://localhost:8080/api/post');\n        response.data.name = \"\";\n        commit('GET_LIST_POST', response.data, category);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getListPost({\n      commit\n    }, page) {\n      try {\n        let response = await axios.get('http://localhost:8080/api/post?page=' + page);\n        response.data.name = \"\";\n        commit('GET_LIST_POST_PAGE', response.data, category);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getListPostCategory({\n      commit\n    }, category) {\n      try {\n        let response = await axios.get('http://localhost:8080/api/post?category=' + category + '&page=1');\n        response.data.name = category;\n        commit('GET_LIST_POST', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getAuthLogin() {},\n    async get_length_all_blog({\n      commit\n    }) {\n      try {\n        const response = await axios.get('http://localhost:8080/api/post');\n        const length = response.data.length;\n        commit('GET_LENGTH_ALL_BLOG', length);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","getCookie","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","isAdmin","isAuthentication","token","get","then","response","status","data","catch","Vuex","store","Store","state","statusOverly","statusModal","statusBackground","auth","list_post","length_all_blog","category","getters","mutations","TOGGLE_AUTH","GET_LIST_POST","console","log","GET_LIST_POST_PAGE","GET_AUTH_LOGIN","result","GET_LENGTH_ALL_BLOG","actions","getAllPost","commit","error","getListPost","page","getListPostCategory","getAuthLogin","get_length_all_blog"],"sources":["D:/trainningVuejs/blog_app_vuejs/client/src/store/index.js"],"sourcesContent":["import axios from 'axios'\r\n \r\nfunction getCookie(cname) {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for(let i = 0; i <ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n  var isAdmin = false;\r\n  var isAuthentication = false;\r\n  var token = getCookie('token');\r\n  if(token) isAuthentication = true;\r\n  axios.get('http://localhost:8080/api/isAdmin/'+token)\r\n  .then((response) => {\r\n      if(response.status==200){\r\n        if(response.data == false){\r\n          isAdmin = true\r\n        }else{\r\n          isAdmin = false\r\n        }\r\n      }\r\n    })\r\n  .catch(() => {\r\n      return false;\r\n  });\r\n\r\n\r\n\r\n\r\n  import Vuex from 'vuex'\r\n  var store = new Vuex.Store({\r\n    state () {\r\n        return {\r\n          statusOverly: false,\r\n          statusModal: false,\r\n          statusBackground: true,\r\n          isAdmin: isAdmin,\r\n          auth: {\r\n            isAuthentication: isAuthentication,\r\n          },\r\n          list_post: [],\r\n          length_all_blog: 0,\r\n          category: {\r\n            status: false,\r\n            name: \"\",\r\n          }\r\n        }\r\n      },\r\n      getters: {\r\n        \r\n      },\r\n      mutations: {\r\n        TOGGLE_AUTH(state){\r\n          state.auth.isAuthentication = !state.auth.isAuthentication\r\n        },\r\n        GET_LIST_POST(state, data,category){\r\n          state.list_post = data.list_post\r\n          state.length_all_blog = data.length\r\n          state.category.status = true\r\n          // state.category.name = category\r\n          console.log(category)\r\n        },\r\n        GET_LIST_POST_PAGE(state, list_post){\r\n          state.list_post = list_post\r\n        },\r\n        GET_AUTH_LOGIN(state,result){\r\n          state.auth.isAuthentication = result\r\n        },\r\n        GET_LENGTH_ALL_BLOG(state,length){\r\n          state.length_all_blog = length\r\n        }\r\n      },\r\n      actions: {\r\n        async getAllPost({commit}){\r\n          try{\r\n            let response = await axios.get('http://localhost:8080/api/post')\r\n            response.data.name =  \"\"\r\n            commit('GET_LIST_POST',response.data,category)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        },  \r\n        async getListPost({commit},page){\r\n          try{\r\n            let response = await axios.get('http://localhost:8080/api/post?page='+page)\r\n            response.data.name =  \"\"\r\n            commit('GET_LIST_POST_PAGE',response.data,category)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        },\r\n        async getListPostCategory({commit}, category){\r\n          try{\r\n            let response = await axios.get('http://localhost:8080/api/post?category='+category+'&page=1')\r\n            response.data.name =  category\r\n            commit('GET_LIST_POST',response.data)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        },\r\n        async getAuthLogin(){\r\n\r\n        },\r\n        async get_length_all_blog({commit}){\r\n          try{\r\n            const response = await axios.get('http://localhost:8080/api/post')\r\n            const length = response.data.length\r\n\r\n            commit('GET_LENGTH_ALL_BLOG',length)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        }\r\n      }\r\n  })\r\n  \r\n  export default store"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,CAACC,KAAK,EAAE;EACtB,IAAIC,IAAI,GAAGD,KAAK,GAAG,GAAG;EACtB,IAAIE,aAAa,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAM,CAAC;EACvD,IAAIC,EAAE,GAAGJ,aAAa,CAACK,KAAK,CAAC,GAAG,CAAC;EACjC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAEF,EAAE,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAChC,IAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAC,CAAC;IACb,OAAOE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;MACzBD,CAAC,GAAGA,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;IACpB;IACA,IAAIF,CAAC,CAACG,OAAO,CAACZ,IAAI,CAAC,IAAI,CAAC,EAAE;MACxB,OAAOS,CAAC,CAACE,SAAS,CAACX,IAAI,CAACQ,MAAM,EAAEC,CAAC,CAACD,MAAM,CAAC;IAC3C;EACF;EACA,OAAO,EAAE;AACX;AACA,IAAIK,OAAO,GAAG,KAAK;AACnB,IAAIC,gBAAgB,GAAG,KAAK;AAC5B,IAAIC,KAAK,GAAGjB,SAAS,CAAC,OAAO,CAAC;AAC9B,IAAGiB,KAAK,EAAED,gBAAgB,GAAG,IAAI;AACjCjB,KAAK,CAACmB,GAAG,CAAC,oCAAoC,GAACD,KAAK,CAAC,CACpDE,IAAI,CAAEC,QAAQ,IAAK;EAChB,IAAGA,QAAQ,CAACC,MAAM,IAAE,GAAG,EAAC;IACtB,IAAGD,QAAQ,CAACE,IAAI,IAAI,KAAK,EAAC;MACxBP,OAAO,GAAG,IAAI;IAChB,CAAC,MAAI;MACHA,OAAO,GAAG,KAAK;IACjB;EACF;AACF,CAAC,CAAC,CACHQ,KAAK,CAAC,MAAM;EACT,OAAO,KAAK;AAChB,CAAC,CAAC;AAKF,OAAOC,IAAI,MAAM,MAAM;AACvB,IAAIC,KAAK,GAAG,IAAID,IAAI,CAACE,KAAK,CAAC;EACzBC,KAAK,GAAI;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,KAAK;MAClBC,gBAAgB,EAAE,IAAI;MACtBf,OAAO,EAAEA,OAAO;MAChBgB,IAAI,EAAE;QACJf,gBAAgB,EAAEA;MACpB,CAAC;MACDgB,SAAS,EAAE,EAAE;MACbC,eAAe,EAAE,CAAC;MAClBC,QAAQ,EAAE;QACRb,MAAM,EAAE,KAAK;QACbnB,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACDiC,OAAO,EAAE,CAET,CAAC;EACDC,SAAS,EAAE;IACTC,WAAW,CAACV,KAAK,EAAC;MAChBA,KAAK,CAACI,IAAI,CAACf,gBAAgB,GAAG,CAACW,KAAK,CAACI,IAAI,CAACf,gBAAgB;IAC5D,CAAC;IACDsB,aAAa,CAACX,KAAK,EAAEL,IAAI,EAACY,QAAQ,EAAC;MACjCP,KAAK,CAACK,SAAS,GAAGV,IAAI,CAACU,SAAS;MAChCL,KAAK,CAACM,eAAe,GAAGX,IAAI,CAACZ,MAAM;MACnCiB,KAAK,CAACO,QAAQ,CAACb,MAAM,GAAG,IAAI;MAC5B;MACAkB,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACvB,CAAC;IACDO,kBAAkB,CAACd,KAAK,EAAEK,SAAS,EAAC;MAClCL,KAAK,CAACK,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDU,cAAc,CAACf,KAAK,EAACgB,MAAM,EAAC;MAC1BhB,KAAK,CAACI,IAAI,CAACf,gBAAgB,GAAG2B,MAAM;IACtC,CAAC;IACDC,mBAAmB,CAACjB,KAAK,EAACjB,MAAM,EAAC;MAC/BiB,KAAK,CAACM,eAAe,GAAGvB,MAAM;IAChC;EACF,CAAC;EACDmC,OAAO,EAAE;IACP,MAAMC,UAAU,CAAC;MAACC;IAAM,CAAC,EAAC;MACxB,IAAG;QACD,IAAI3B,QAAQ,GAAG,MAAMrB,KAAK,CAACmB,GAAG,CAAC,gCAAgC,CAAC;QAChEE,QAAQ,CAACE,IAAI,CAACpB,IAAI,GAAI,EAAE;QACxB6C,MAAM,CAAC,eAAe,EAAC3B,QAAQ,CAACE,IAAI,EAACY,QAAQ,CAAC;MAChD,CAAC,QAAMc,KAAK,EAAC;QACXT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMC,WAAW,CAAC;MAACF;IAAM,CAAC,EAACG,IAAI,EAAC;MAC9B,IAAG;QACD,IAAI9B,QAAQ,GAAG,MAAMrB,KAAK,CAACmB,GAAG,CAAC,sCAAsC,GAACgC,IAAI,CAAC;QAC3E9B,QAAQ,CAACE,IAAI,CAACpB,IAAI,GAAI,EAAE;QACxB6C,MAAM,CAAC,oBAAoB,EAAC3B,QAAQ,CAACE,IAAI,EAACY,QAAQ,CAAC;MACrD,CAAC,QAAMc,KAAK,EAAC;QACXT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMG,mBAAmB,CAAC;MAACJ;IAAM,CAAC,EAAEb,QAAQ,EAAC;MAC3C,IAAG;QACD,IAAId,QAAQ,GAAG,MAAMrB,KAAK,CAACmB,GAAG,CAAC,0CAA0C,GAACgB,QAAQ,GAAC,SAAS,CAAC;QAC7Fd,QAAQ,CAACE,IAAI,CAACpB,IAAI,GAAIgC,QAAQ;QAC9Ba,MAAM,CAAC,eAAe,EAAC3B,QAAQ,CAACE,IAAI,CAAC;MACvC,CAAC,QAAM0B,KAAK,EAAC;QACXT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMI,YAAY,GAAE,CAEpB,CAAC;IACD,MAAMC,mBAAmB,CAAC;MAACN;IAAM,CAAC,EAAC;MACjC,IAAG;QACD,MAAM3B,QAAQ,GAAG,MAAMrB,KAAK,CAACmB,GAAG,CAAC,gCAAgC,CAAC;QAClE,MAAMR,MAAM,GAAGU,QAAQ,CAACE,IAAI,CAACZ,MAAM;QAEnCqC,MAAM,CAAC,qBAAqB,EAACrC,MAAM,CAAC;MACtC,CAAC,QAAMsC,KAAK,EAAC;QACXT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB;IACF;EACF;AACJ,CAAC,CAAC;AAEF,eAAevB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}