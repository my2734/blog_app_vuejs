{"ast":null,"code":"import axios from 'axios';\nimport Vuex from 'vuex';\nvar store = new Vuex.Store({\n  state() {\n    return {\n      statusOverly: false,\n      statusModal: false,\n      statusBackground: true,\n      isAdmin: false,\n      auth: {\n        isAuthentication: false\n      },\n      list_post: [],\n      length_all_blog: 0,\n      category: {\n        status: false,\n        category: \"\"\n      }\n    };\n  },\n  getters: {},\n  mutations: {\n    TOGGLE_AUTH(state) {\n      state.auth.isAuthentication = !state.auth.isAuthentication;\n    },\n    GET_LIST_POST(state, data) {\n      state.list_post = data.list_post;\n      state.length_all_blog = data.length;\n      state.category.status = true;\n      state.category.category = data.category;\n    },\n    GET_LIST_POST_PAGE(state, list_post) {\n      state.list_post = list_post;\n    },\n    GET_AUTH_LOGIN(state, result) {\n      state.auth.isAuthentication = result;\n    },\n    GET_LENGTH_ALL_BLOG(state, length) {\n      state.length_all_blog = length;\n    }\n  },\n  actions: {\n    async getAllPost({\n      commit\n    }) {\n      try {\n        let response = await axios.get('http://localhost:8080/api/post');\n        response.data.category = \"\";\n        commit('GET_LIST_POST', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getListPost({\n      commit\n    }, page) {\n      try {\n        let response = await axios.get('http://localhost:8080/api/post?page=' + page);\n        response.data.category = \"\";\n        commit('GET_LIST_POST_PAGE', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getListPostBySearch({\n      commit\n    }, searchKey) {\n      try {\n        let response = await axios.get('http://localhost:8080/api/post?searchKey=' + searchKey);\n        response.data.category = \"\";\n        commit('GET_LIST_POST_PAGE', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getListPostCategory({\n      commit\n    }, category) {\n      try {\n        let response = await axios.get('http://localhost:8080/api/post?category=' + category + '&page=1');\n        response.data.category = category;\n        commit('GET_LIST_POST', response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getAuthLogin() {},\n    async get_length_all_blog({\n      commit\n    }) {\n      try {\n        const response = await axios.get('http://localhost:8080/api/post');\n        const length = response.data.length;\n        commit('GET_LENGTH_ALL_BLOG', length);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","Vuex","store","Store","state","statusOverly","statusModal","statusBackground","isAdmin","auth","isAuthentication","list_post","length_all_blog","category","status","getters","mutations","TOGGLE_AUTH","GET_LIST_POST","data","length","GET_LIST_POST_PAGE","GET_AUTH_LOGIN","result","GET_LENGTH_ALL_BLOG","actions","getAllPost","commit","response","get","error","console","log","getListPost","page","getListPostBySearch","searchKey","getListPostCategory","getAuthLogin","get_length_all_blog"],"sources":["D:/trainningVuejs/blog_app_vuejs/client/src/store/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\n\r\n\r\n  import Vuex from 'vuex'\r\n  var store = new Vuex.Store({\r\n    state () {\r\n        return {\r\n          statusOverly: false,\r\n          statusModal: false,\r\n          statusBackground: true,\r\n          isAdmin: false,\r\n          auth: {\r\n            isAuthentication: false,\r\n          },\r\n          list_post: [],\r\n          length_all_blog: 0,\r\n          category: {\r\n            status: false,\r\n            category:\"\"\r\n          }\r\n        }\r\n      },\r\n      getters: {\r\n        \r\n      },\r\n      mutations: {\r\n        TOGGLE_AUTH(state){\r\n          state.auth.isAuthentication = !state.auth.isAuthentication\r\n        },\r\n        GET_LIST_POST(state, data){\r\n          state.list_post = data.list_post\r\n          state.length_all_blog = data.length\r\n          state.category.status = true\r\n          state.category.category = data.category\r\n        },\r\n        GET_LIST_POST_PAGE(state, list_post){\r\n          state.list_post = list_post\r\n        },\r\n        GET_AUTH_LOGIN(state,result){\r\n          state.auth.isAuthentication = result\r\n        },\r\n        GET_LENGTH_ALL_BLOG(state,length){\r\n          state.length_all_blog = length\r\n        }\r\n      },\r\n      actions: {\r\n        async getAllPost({commit}){\r\n          try{\r\n            let response = await axios.get('http://localhost:8080/api/post')\r\n            response.data.category =  \"\"\r\n            commit('GET_LIST_POST',response.data)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        },  \r\n        async getListPost({commit},page){\r\n          try{\r\n            let response = await axios.get('http://localhost:8080/api/post?page='+page)\r\n            response.data.category =  \"\"\r\n            commit('GET_LIST_POST_PAGE',response.data)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        },\r\n        async getListPostBySearch({commit},searchKey){\r\n          try{\r\n            let response = await axios.get('http://localhost:8080/api/post?searchKey='+searchKey)\r\n            response.data.category =  \"\"\r\n            commit('GET_LIST_POST_PAGE',response.data)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        },\r\n        async getListPostCategory({commit}, category){\r\n          try{\r\n            let response = await axios.get('http://localhost:8080/api/post?category='+category+'&page=1')\r\n            response.data.category =  category\r\n            commit('GET_LIST_POST',response.data)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        },\r\n        async getAuthLogin(){\r\n\r\n        },\r\n        async get_length_all_blog({commit}){\r\n          try{\r\n            const response = await axios.get('http://localhost:8080/api/post')\r\n            const length = response.data.length\r\n\r\n            commit('GET_LENGTH_ALL_BLOG',length)\r\n          }catch(error){\r\n            console.log(error)\r\n          }\r\n        }\r\n      }\r\n  })\r\n  \r\n  export default store"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}